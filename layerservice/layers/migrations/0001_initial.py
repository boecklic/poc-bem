# Generated by Django 2.2 on 2019-04-17 07:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.TextField(db_column='parent_id', help_text='Technische Layer ID der Gruppe zu welcher eine oder mehrere datasets gehören, Einschränkung ein dataset kann zu maximal einer gruppe gehören.')),
                ('id_dataset', models.TextField(db_column='id_dataset', help_text='Eindeutiger Name des datasets oder layer entsprechend Namenskonvention Layernamen, entspricht dem layername. ')),
                ('frm_bezeichnung_de', models.TextField(db_column='frm_bezeichnung_de')),
                ('frm_bezeichnung_fr', models.TextField(db_column='frm_bezeichnung_fr')),
                ('frm_bezeichnung_it', models.TextField(db_column='frm_bezeichnung_it')),
                ('frm_bezeichnung_en', models.TextField(db_column='frm_bezeichnung_en')),
                ('frm_bezeichnung_rm', models.TextField(db_column='frm_bezeichnung_rm')),
                ('frm_abstract_de', models.TextField(db_column='frm_abstract_de')),
                ('frm_abstract_fr', models.TextField(db_column='frm_abstract_fr')),
                ('frm_abstract_it', models.TextField(db_column='frm_abstract_it')),
                ('frm_abstract_en', models.TextField(db_column='frm_abstract_en')),
                ('frm_abstract_rm', models.TextField(db_column='frm_abstract_rm')),
                ('kurzbezeichnung_de', models.TextField(db_column='kurzbezeichnung_de')),
                ('kurzbezeichnung_fr', models.TextField(db_column='kurzbezeichnung_fr')),
                ('kurzbezeichnung_it', models.TextField(db_column='kurzbezeichnung_it')),
                ('kurzbezeichnung_en', models.TextField(db_column='kurzbezeichnung_en')),
                ('kurzbezeichnung_rm', models.TextField(db_column='kurzbezeichnung_rm')),
                ('frm_nachfuehrung_intervall', models.TextField(db_column='frm_nachfuehrung_intervall', default='andere')),
                ('frm_scale_limit', models.TextField(db_column='frm_scale_limit', default='-')),
                ('ms_minscaledenom', models.IntegerField(db_column='ms_minscaledenom')),
                ('ms_maxscaledenom', models.IntegerField(db_column='ms_maxscaledenom')),
                ('ms_labelminscaledenom', models.IntegerField(db_column='ms_labelminscaledenom', default=-1)),
                ('ms_labelmaxscaledenom', models.IntegerField(db_column='ms_labelmaxscaledenom', default=-1)),
                ('frm_url', models.TextField(db_column='frm_url', help_text='Informations URL aus dem Datenintegrations Formular')),
                ('b1_nutzungsbedingungen', models.TextField(db_column='b1_nutzungsbedingungen', help_text='URL zu den Nutzungsbedingungen')),
                ('b1_urheberrecht', models.TextField(db_column='b1_urheberrecht')),
                ('url_download', models.TextField(db_column='url_download', help_text='URL zum Download Dienst')),
                ('url_portale', models.TextField(db_column='url_portale', help_text='Liste mit URLs von Portalen die diesen Datensatz verwenden.')),
                ('fk_geobasisdaten_sammlung_bundesrecht', models.TextField(db_column='fk_geobasisdaten_sammlung_bundesrecht')),
                ('fk_geocat', models.TextField(db_column='fk_geocat', help_text='referencing regular grid raster extent')),
                ('fk_datasource_id', models.TextField(db_column='fk_datasource_id')),
                ('fk_contactorganisation_id', models.IntegerField(db_column='fk_contactorganisation_id')),
                ('comment', models.TextField(db_column='comment')),
                ('staging', models.TextField(db_column='staging')),
                ('bodsearch', models.BooleanField(db_column='bodsearch', help_text='bodsearch true/false set true if layer should be visible in chsdi layers, feature, bodsearch.')),
                ('bgdi_id', models.IntegerField(db_column='bgdi_id')),
                ('download', models.BooleanField(db_column='download', default=False, help_text='chargeable true/false if layer wmts access is chargeable or not')),
                ('bgdi_modified', models.DateTimeField(auto_now=True, db_column='bgdi_modified')),
                ('bgdi_created', models.DateTimeField(auto_now_add=True, db_column='bgdi_created')),
                ('bgdi_modified_by', models.CharField(db_column='bgdi_modified_by', max_length=50)),
                ('bgdi_created_by', models.CharField(db_column='bgdi_created_by', max_length=50)),
                ('ows_keywordlist_de', models.TextField(db_column='ows_keywordlist_de')),
                ('ows_keywordlist_fr', models.TextField(db_column='ows_keywordlist_fr')),
                ('ows_keywordlist_it', models.TextField(db_column='ows_keywordlist_it')),
                ('ows_keywordlist_en', models.TextField(db_column='ows_keywordlist_en')),
                ('ows_keywordlist_rm', models.TextField(db_column='ows_keywordlist_rm')),
                ('chargeable', models.BooleanField(db_column='chargeable', default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tileset',
            fields=[
                ('fk_dataset_id', models.CharField(db_column='fk_dataset_id', max_length=1024, primary_key=True, serialize=False)),
                ('format', models.CharField(db_column='format', max_length=1024, null=True)),
                ('timestamp', models.CharField(db_column='timestamp', max_length=1024)),
                ('bgdi_modified', models.DateTimeField(auto_now=True, db_column='bgdi_modified')),
                ('bgdi_created', models.DateTimeField(db_column='bgdi_created')),
                ('bgdi_modified_by', models.CharField(db_column='bgdi_modified_by', max_length=50, null=True)),
                ('bgdi_created_by', models.CharField(db_column='bgdi_created_by', max_length=50, null=True)),
                ('bgdi_id', models.PositiveIntegerField(db_column='bgdi_id')),
                ('wms_gutter', models.PositiveIntegerField(db_column='wms_gutter', default=0)),
                ('cache_ttl', models.PositiveIntegerField(db_column='cache_ttl', default=1800, help_text='Cache "time to live"')),
                ('resolution_min', models.DecimalField(db_column='resolution_min', decimal_places=2, max_digits=7)),
                ('resolution_max', models.DecimalField(db_column='resolution_max', decimal_places=2, max_digits=7)),
                ('published', models.BooleanField(db_column='published', default=True)),
            ],
            options={
                'db_table': 'tileset',
            },
        ),
    ]
