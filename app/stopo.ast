Module(
    body=[
        ImportFrom(
            module='sqlalchemy',
            names=[
                alias(name='Column')],
            level=0),
        ImportFrom(
            module='sqlalchemy.types',
            names=[
                alias(name='Numeric'),
                alias(name='Boolean'),
                alias(name='Integer'),
                alias(name='Float'),
                alias(name='Unicode'),
                alias(name='BigInteger'),
                alias(name='SmallInteger')],
            level=0),
        ImportFrom(
            module='chsdi.models',
            names=[
                alias(name='register'),
                alias(name='bases')],
            level=0),
        ImportFrom(
            module='chsdi.models.types',
            names=[
                alias(name='DateTimeChsdi')],
            level=0),
        ImportFrom(
            module='chsdi.models.vector',
            names=[
                alias(name='Vector'),
                alias(name='Geometry2D')],
            level=0),
        Assign(
            targets=[
                Name(id='Base', ctx=Store())],
            value=Subscript(
                value=Name(id='bases', ctx=Load()),
                slice=Constant(value='stopo'),
                ctx=Load())),
        ClassDef(
            name='GeologieGeologische3dmodelle',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologische_3dmodelle')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologische3dmodelle.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geologische_3dmodelle')),
                Assign(
                    targets=[
                        Name(id='__returnedGeometry__', ctx=Store())],
                    value=Constant(value='the_geom_simplified')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='__label_', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purpose', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purpose'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='content', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='content'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='remarks', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='remarks'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='year_publication', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='year_publication'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='de_contracting_entity', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='de_contracting_entity'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fr_contracting_entity', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fr_contracting_entity'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='it_contracting_entity', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='it_contracting_entity'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='en_contracting_entity', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='en_contracting_entity'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rm_contracting_entity', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rm_contracting_entity'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='de_author', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='de_author'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fr_author', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fr_author'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='it_author', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='it_author'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='en_author', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='en_author'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rm_author', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rm_author'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='de_link_portal', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='de_link_portal'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fr_link_portal', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fr_link_portal'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='it_link_portal', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='it_link_portal'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='en_link_portal', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='en_link_portal'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rm_link_portal', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rm_link_portal'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='de_link_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='de_link_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fr_link_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fr_link_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='it_link_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='it_link_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='en_link_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='en_link_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rm_link_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rm_link_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='de_link_documentation', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='de_link_documentation'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fr_link_documentation', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fr_link_documentation'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='it_link_documentation', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='it_link_documentation'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='en_link_documentation', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='en_link_documentation'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rm_link_documentation', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rm_link_documentation'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom_simplified', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='the_geom_simplified'),
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologische_3dmodelle'),
                    Name(id='GeologieGeologische3dmodelle', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeomorphologie',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomorphologie')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologie-geomorphologie.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomorphologie')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='ads_name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='ads_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ads_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomorphologie'),
                    Name(id='GeologieGeomorphologie', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolIsotherme',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload'),
                            Constant(value='extend_existing')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False),
                            Constant(value=True)])),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objectid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='elev', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='elev'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeomolIsotherme60',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolIsotherme', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_isotherme_60_elev')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_isotherme60.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-isotherme_60'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-isotherme_60'),
                    Name(id='GeomolIsotherme60', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolIsotherme100',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolIsotherme', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_isotherme_100_elev')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_isotherme100.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-isotherme_100'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-isotherme_100'),
                    Name(id='GeomolIsotherme100', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolIsotherme150',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolIsotherme', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_isotherme_150_elev')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_isotherme150.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-isotherme_150'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-isotherme_150'),
                    Name(id='GeomolIsotherme150', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempEingangdaten',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperaturmodell_eingangsdaten_pt')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_temperaturmodell.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperaturmodell_eingangsdaten')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='label')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='label', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='label'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='typ', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='country', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='country'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='canton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='canton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='x'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='y'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperaturmodell_eingangsdaten'),
                    Name(id='GeomolTempEingangdaten', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempTopRaster',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload'),
                            Constant(value='extend_existing')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False),
                            Constant(value=True)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_temperatur_top.mako')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='pixel_value', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pixel_value'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeomolTempTopElev',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload'),
                            Constant(value='extend_existing')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False),
                            Constant(value=True)])),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='elev', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='elev'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeomolTempTopOmmRaster',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempTopRaster', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperatur_omm_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_omm'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_omm'),
                    Name(id='GeomolTempTopOmmRaster', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempTopOmmElev',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempTopElev', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperatur_omm_elev')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_temperatur_omm_elev.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_omm'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_omm'),
                    Name(id='GeomolTempTopOmmElev', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempTopOmalmRaster',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempTopRaster', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperatur_omalm_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_omalm'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_omalm'),
                    Name(id='GeomolTempTopOmalmRaster', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempTopOmalmElev',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempTopElev', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperatur_omalm_elev')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_temperatur_omalm_elev.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_omalm'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_omalm'),
                    Name(id='GeomolTempTopOmalmElev', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempTopMuschelkalkRaster',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempTopRaster', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperatur_muschelkalk_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_muschelkalk'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_muschelkalk'),
                    Name(id='GeomolTempTopMuschelkalkRaster', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempTopMuschelkalkElev',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempTopElev', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperatur_muschelkalk_elev')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_temperatur_muschelkalk_elev.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_muschelkalk'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperatur_top_muschelkalk'),
                    Name(id='GeomolTempTopMuschelkalkElev', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempverteilung',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload'),
                            Constant(value='extend_existing')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False),
                            Constant(value=True)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geomol_temperaturverteilung.mako')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='pixel_value', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pixel_value'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeomolTempverteilung500',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempverteilung', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperaturverteilung_500_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_500'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_500'),
                    Name(id='GeomolTempverteilung500', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempverteilung1000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempverteilung', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperaturverteilung_1000_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_1000'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_1000'),
                    Name(id='GeomolTempverteilung1000', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempverteilung1500',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempverteilung', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperaturverteilung_1500_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_1500'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_1500'),
                    Name(id='GeomolTempverteilung1500', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempverteilung2000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempverteilung', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperaturverteilung_2000_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_2000'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_2000'),
                    Name(id='GeomolTempverteilung2000', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempverteilung3000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempverteilung', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperaturverteilung_3000_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_3000'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_3000'),
                    Name(id='GeomolTempverteilung3000', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeomolTempverteilung4000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeomolTempverteilung', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geomol_temperaturverteilung_4000_raster')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_4000'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geomol-temperaturverteilung_4000'),
                    Name(id='GeomolTempverteilung4000', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='DosisleistungTerrestrisch',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='dosisleistung_terrestrisch')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/dosisleistung_terrestrisch.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-dosisleistung-terrestrisch')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='contour')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='contour', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contour'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-dosisleistung-terrestrisch'),
                    Name(id='DosisleistungTerrestrisch', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Landesschwerenetz',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='fida'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/landesschwerenetz.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.landesschwerenetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='label_tt')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='nr_lsn2004', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nr_lsn2004'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='label_tt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='label'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='lat_etrs', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='lat_etrs'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='lon_etrs', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='lon_etrs'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='y_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='x_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='h_ln02', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='h_ln02'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gravity', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gravity'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rms', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rms'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='vert_grad', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='vertgrad'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_hfp_title', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='linkhfptit'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_hfp_url', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_hfp'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_lfp_title', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='linklfptit'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_lfp_url', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_lfp'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='LandesschwerenetzZoom1',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Landesschwerenetz', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='landesschwerenetz')),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=1)),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=3000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='LandesschwerenetzZoom2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Landesschwerenetz', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='landesschwerenetz_overview')),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=3000))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='Landesschwerenetz', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='LandesschwerenetzZoom1', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='Landesschwerenetz', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='LandesschwerenetzZoom2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GravimetrischerAtlasMesspunkte',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gravimetrisch_messpunkte')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gravimetrischer_atlas_messpunkte.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gravimetrischer_atlas.messpunkte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='stationnam')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='stationnam', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stationnam'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='coordhor', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='coordhor'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='coordver', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='coordver'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='altitude', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='altitude'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bouguerano', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bouguerano'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gravimetrischer_atlas.messpunkte'),
                    Name(id='GravimetrischerAtlasMesspunkte', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeoevents',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologie_geoevents.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geowege')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='post_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='post_title', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='post_title'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='allgemein_leadtext', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='allgemein_leadtext'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='treffpunkt_gemeinde', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='treffpunkt_gemeinde'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='treffpunkt_kanton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='treffpunkt_kanton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kontakt_firma', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kontakt_firma'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='post_permalink', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='post_permalink'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologieGeoeventsDemnaechst',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load()),
                Name(id='GeologieGeoevents', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v_erlebnis_naechste')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geoevents_demnaechst'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologieGeoeventsDemnaechst', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologieGeoeventsDemnaechst', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeoeventsAnfrage',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load()),
                Name(id='GeologieGeoevents', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v_erlebnis_anfrage')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geoevents_anfrage'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologieGeoeventsAnfrage', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologieGeoeventsAnfrage', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeoeventsSites',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load()),
                Name(id='GeologieGeoevents', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v_erlebnis_sites')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geosites'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologieGeoeventsSites', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologieGeoeventsSites', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeowege',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologie_geowege.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geowege')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='post_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='post_title', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='agg_post_title'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='allgemein_leadtext', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='agg_allgemein_leadtext'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='treffpunkt_gemeinde', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='agg_treffpunkt_gemeinde'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='treffpunkt_kanton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='agg_treffpunkt_kanton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kontakt_firma', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='agg_kontakt_firma'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='post_permalink', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='agg_post_permalink'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v_erlebnis_geowege_tracks')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geowege'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologieGeowege', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologieGeowege', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeolGeneralkarteGGK200Meta',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='generalkarte_ggk200_meta')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/generalkarte_ggk200.metadata.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-generalkarte-ggk200.metadata')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='titel')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='nr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='titel', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='titel'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='jahr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='jahr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='autor', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='autor'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-generalkarte-ggk200.metadata'),
                    Name(id='GeolGeneralkarteGGK200Meta', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologischerAtlasMeta',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologischer_atlas_meta.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='nummer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nummer'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='massstab', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='massstab'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ausgabejahr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ausgabejahr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='autoren', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='autoren'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasRasterMeta',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlasMeta', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_raster_meta')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geologischer_atlas.metadata'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas.metadata'),
                    Name(id='GeologischerAtlasRasterMeta', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologischerAtlasVectorMeta',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlasMeta', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_vector_meta')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geologischer_atlas_vector.metadata'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas_vector.metadata'),
                    Name(id='GeologischerAtlasVectorMeta', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeolSpezialkartenMetadata',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/spezialkarten_meta.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='titel')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='gsk_nr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gsk_nr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='titel', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='titel'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='massstab', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='massstab'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='jahrgang', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='jahrgang'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='autoren', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='autoren'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeolSpezialkartenRasterMetadata',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeolSpezialkartenMetadata', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='spezialkarten_raster_meta')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-spezialkarten_schweiz.metadata'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-spezialkarten_schweiz.metadata'),
                    Name(id='GeolSpezialkartenRasterMetadata', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeolSpezialKartenVectorMeta',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeolSpezialkartenMetadata', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='spezialkarten_vector_meta')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-spezialkarten_schweiz_vector.metadata'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-spezialkarten_schweiz_vector.metadata'),
                    Name(id='GeolSpezialKartenVectorMeta', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SwissboundariesBezirk',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissboundaries_bezirke')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissboundaries_bezirk.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swissboundaries3d-bezirk-flaeche.fill')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='flaeche', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='flaeche'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissboundaries3d-bezirk-flaeche.fill'),
                    Name(id='SwissboundariesBezirk', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SwissboundariesGemeinde',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissboundaries_gemeinden_hist_chsdi')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissboundaries_gemeinde.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swissboundaries3d-gemeinde-flaeche.fill')),
                Assign(
                    targets=[
                        Name(id='__timeInstant__', ctx=Store())],
                    value=Constant(value='jahr')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gemname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='object_id'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='gde_hist_id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gde_hist_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gde_nr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gde_nr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gemname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gde_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='jahr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='jahr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gemflaeche', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='flaeche_ha'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='perimeter', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='perimeter'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kanton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kanton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='is_current_jahr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='is_current_jahr'),
                            Name(id='Boolean', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektart_lookup', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart_lookup'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissboundaries3d-gemeinde-flaeche.fill'),
                    Name(id='SwissboundariesGemeinde', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SwissboundariesKanton',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissboundaries_kantone')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissboundaries_kanton.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swissboundaries3d-kanton-flaeche.fill')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kantonsnr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='ak', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ak'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='flaeche', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='flaeche'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissboundaries3d-kanton-flaeche.fill'),
                    Name(id='SwissboundariesKanton', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SwissBoundariesLand',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissboundaries_land')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swissboundaries3d-land-flaeche.fill')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissboundaries_country.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='displayname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='icc'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='flaeche', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='flaeche'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='displayname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='displayname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bez', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bez'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissboundaries3d-land-flaeche.fill'),
                    Name(id='SwissBoundariesLand', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec200Terminal',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_terminal')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_terminal.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-transportation-oeffentliche-verkehr')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objval')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200ShipKursschiff',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v200_ship_kursschiff_linie_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_ship_kursschiff_linie.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-transportation-oeffentliche-verkehr')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objval')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='detn', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='detn'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rsu', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rsu'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='use', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='use'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200Railway',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_railway')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_railway.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-transportation-oeffentliche-verkehr')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objval')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='construct', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='construct'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-transportation-oeffentliche-verkehr'),
                    Name(id='Vec200Terminal', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-transportation-oeffentliche-verkehr'),
                    Name(id='Vec200ShipKursschiff', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-transportation-oeffentliche-verkehr'),
                    Name(id='Vec200Railway', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec200Trafficinfo',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_trafficinfo')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_trafficinfo.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-transportation-strassennetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200ShipAutofaehre',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v200_ship_autofaehre_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_ship_autofaehre.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-transportation-strassennetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='detn')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='use', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='use'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rsu', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rsu'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='detn', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='detn'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200Road',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_road')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_road.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-transportation-strassennetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objval')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='construct', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='construct'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='toll', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='toll'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200Ramp',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_ramp')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_ramp.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-transportation-strassennetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objval')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='construct', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='construct'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='toll', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='toll'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200Customsoffice',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_customsoffice')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_customsoffice.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-transportation-strassennetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='ojbname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-transportation-strassennetz'),
                    Name(id='Vec200Trafficinfo', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-transportation-strassennetz'),
                    Name(id='Vec200ShipAutofaehre', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-transportation-strassennetz'),
                    Name(id='Vec200Road', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-transportation-strassennetz'),
                    Name(id='Vec200Ramp', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-transportation-strassennetz'),
                    Name(id='Vec200Customsoffice', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec200Protectedarea',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_protectedarea')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_protectedarea.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-adminboundaries-protectedarea')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-adminboundaries-protectedarea'),
                    Name(id='Vec200Protectedarea', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec200Flowingwater',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_flowingwater')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_flowingwater.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-hydrography')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='exs', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='exs'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='hoc', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='hoc'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200Stagnantwater',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_stagnantwater')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_stagnantwater.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-hydrography')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='seesph', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='seesph'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-hydrography'),
                    Name(id='Vec200Flowingwater', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-hydrography'),
                    Name(id='Vec200Stagnantwater', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec200Landcover',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_landcover')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_landcover.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-landcover')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objname1')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objname1', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objname1'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-landcover'),
                    Name(id='Vec200Landcover', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec200Builtupp',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_builtupp')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_builtupp.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-miscellaneous')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ppi', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ppi'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200Poi',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v200_poi_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_poi.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-miscellaneous')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ppc', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ppc'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pro', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pro'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Vec200Supply',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_supply')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_supply.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-miscellaneous')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='fco')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fco', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fco'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='loc', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='loc'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pro', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pro'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-miscellaneous'),
                    Name(id='Vec200Builtupp', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-miscellaneous'),
                    Name(id='Vec200Poi', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-miscellaneous'),
                    Name(id='Vec200Supply', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec200Namedlocation',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='vec200_namedlocation')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec200_namedlocation.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec200-names-namedlocation')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objname1')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gtdboid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objname1', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objname1'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objname2', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objname2'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='altitude', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='altitude'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec200-names-namedlocation'),
                    Name(id='Vec200Namedlocation', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec25Anlagen',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v25_anl_25_a')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec25_anlagen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec25-anlagen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='area')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='area', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='area'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='perimeter', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='perimeter'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec25-anlagen'),
                    Name(id='Vec25Anlagen', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec25Gebaeude',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v25_geb_25_a')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec25_gebaeude.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec25-gebaeude')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='area')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='area', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='area'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='perimeter', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='perimeter'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec25-gebaeude'),
                    Name(id='Vec25Gebaeude', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec25Primaerflaechen',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v25_pri25_a')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec25_primaerflaechen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec25-primaerflaechen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='area')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='area', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='area'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='perimeter', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='perimeter'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec25-primaerflaechen'),
                    Name(id='Vec25Primaerflaechen', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec25Einzelobjekte',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v25_eob_25_l')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec25_einzelobjekte.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec25-einzelobjekte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='length')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='length', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='length'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec25-einzelobjekte'),
                    Name(id='Vec25Einzelobjekte', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec25Heckenbaeume',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v25_heb_25_l')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/vec25_heckenbaeume.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec25-heckenbaeume')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='length')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='length', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='length'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec25-heckenbaeume'),
                    Name(id='Vec25Heckenbaeume', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Dreiecksvermaschung',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='dreiecksvermaschung')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/dreiecksvermaschung.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.dreiecksvermaschung')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='nom')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='nom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nom'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='num', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='num'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.dreiecksvermaschung'),
                    Name(id='Dreiecksvermaschung', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GridstandTemplate',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='datenstand'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='lk_name')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gridstand.mako')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='BigInteger', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='tileid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tileid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='lk_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='lk_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='datenstand', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='release'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='releasekey', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='releasekey'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GridstandPermiterTemplate',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='autoload')],
                        values=[
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GridstandPk25Meta',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GridstandTemplate', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.pixelkarte-pk25.metadata')),
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_datenhaltung_pk25_tilecache'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.pixelkarte-pk25.metadata'),
                    Name(id='GridstandPk25Meta', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GridstandPk50Meta',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GridstandTemplate', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.pixelkarte-pk50.metadata')),
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_datenhaltung_pk50_tilecache'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.pixelkarte-pk50.metadata'),
                    Name(id='GridstandPk50Meta', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GridstandPk100Meta',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GridstandTemplate', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.pixelkarte-pk100.metadata')),
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_datenhaltung_pk100_tilecache'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.pixelkarte-pk100.metadata'),
                    Name(id='GridstandPk100Meta', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GridstandPk200Meta',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GridstandTemplate', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.pixelkarte-pk200.metadata')),
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_datenhaltung_pk200_tilecache')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kbnum'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.pixelkarte-pk200.metadata'),
                    Name(id='GridstandPk200Meta', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GridstandSwissimageDop10',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_datenhaltung_swissimage_dop10_tilecache')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='datenstand'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.images-swissimage-dop10.metadata')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissimage_dop10.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tile_id'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='datenstand', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='flightyear'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='resolution', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='resolution'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.images-swissimage-dop10.metadata'),
                    Name(id='GridstandSwissimageDop10', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GridstandSwisssurface3d',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_swisssurface3d')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='datenstand'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisssurface3d.metadata')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisssurface3d.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tilekey'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='temporalkey', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='temporalkey'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisssurface3d.metadata'),
                    Name(id='GridstandSwisssurface3d', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GridstandSwisssurface3dRaster',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_swisssurface3d_raster_metadata')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='datenstand'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisssurface3d-raster.metadata')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisssurface3d_raster.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tilekey'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fly_y_min', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fly_y_min'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fly_y_max', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fly_y_max'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GridstandSwisssurface3dRaster', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GridstandSwisssurface3dRaster', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologischeKarteLine',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologische_karte_line')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologische_karte_line.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geologische_karte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='type_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='gid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischeKartePlg',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologische_karte_plg')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologische_karte_plg.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geologische_karte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='leg_geol_d')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='leg_geol_d', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='leg_geol_d'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='leg_geol_f', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='leg_geol_f'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologische_karte'),
                    Name(id='GeologischeKarteLine', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologische_karte'),
                    Name(id='GeologischeKartePlg', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieMineralischeRohstoffe200',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_mineralische_rohstoffe200')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geotechnik_mineralische_rohstoffe200.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-mineralische_rohstoffe200')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='area_name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='legend', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='legend'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='area_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='area_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-mineralische_rohstoffe200'),
                    Name(id='GeologieMineralischeRohstoffe200', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieFelsoberflaecheHoehenModell',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='felsoberflaeche_hoehenmodell')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologie_felsoberflaeche_hoehenmodell.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-felsoberflaeche_hoehenmodell')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='height')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='height', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='height'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologieFelsoberflaecheHoehenModell', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologieFelsoberflaecheHoehenModell', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieLockergesteinMaechtigkeitsModell',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='lockergestein_maechtigkeitsmodell')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologie_lockergestein_maechtigkeitsmodell.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-lockergestein_maechtigkeitsmodell')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='height')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='height', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='height'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologieLockergesteinMaechtigkeitsModell', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologieLockergesteinMaechtigkeitsModell', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieBohrungenTiefer500',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='bohrungen_tiefer_500')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/bohrungen_tiefer_500.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-bohrungen_tiefer_500')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='td_m_md', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='td_m_md'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='td_m_tvd', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='td_m_tvd'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fm_at_td', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fm_at_td'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purpose_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purpose_d'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purpose_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purpose_f'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purpose_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purpose_e'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='discover_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='discover_d'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='discover_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='discover_f'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='discover_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='discover_e'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status_d'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status_f'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status_e'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='spud', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spud'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='end', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='end_'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='temp', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='temp'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='swissgeol', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='swissgeol'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='easting', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='easting'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='northing', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='northing'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zgl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zgl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ref_type_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ref_type_d'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ref_type_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ref_type_f'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ref_type_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ref_type_e'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zref', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zref'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='client', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='client'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='owner', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='owner'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='download', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='download'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='content', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='content'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='web_link', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='web_link'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_d'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_f'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_e'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='canton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='canton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-bohrungen_tiefer_500'),
                    Name(id='GeologieBohrungenTiefer500', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeothermischePotenzialstudien',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geothermische_potenzialstudien')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geothermische_potenzialstudien.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geothermische_potenzialstudien_regional')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='kanton')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='land', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='land'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kanton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kanton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='nb_studien', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nb_studien'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='titel_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='titel_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='titel_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='titel_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='titel_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='titel_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='titel_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='titel_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='titel_rm', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='titel_rm'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='autor', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='autor'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='jahr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='jahr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='auftraggeber', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='auftraggeber'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='weblink_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='weblink_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='weblink_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='weblink_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='weblink_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='weblink_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='weblink_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='weblink_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='download', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='download'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='legend', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='legend'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geothermische_potenzialstudien_regional'),
                    Name(id='GeologieGeothermischePotenzialstudien', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotechnikGk200',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_gk200_lgd')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geotechnik_gk200.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-gk200')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='file_name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='file_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='file_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-gk200'),
                    Name(id='GeologieGeotechnikGk200', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='TiefenGeothermieProjekte',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload'),
                            Constant(value='extend_existing')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False),
                            Constant(value=True)])),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='owner', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='owner'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='system_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='system_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='system_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='system_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='system_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='system_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='system_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='system_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purpose_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purpose_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purpose_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purpose_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purpose_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purpose_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purpose_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purpose_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='canton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='canton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='municipality_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='municipality_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='municipality_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='municipality_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='municipality_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='municipality_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='municipality_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='municipality_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='res_tvd', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='res_tvd'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='reservoir', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='reservoir'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='temperature', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='temperature'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='year', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='year'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='subsidy_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='subsidy_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='subsidy_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='subsidy_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='subsidy_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='subsidy_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='subsidy_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='subsidy_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='download', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='download'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='more_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='more_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='more_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='more_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='more_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='more_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='more_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='more_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='TiefenGeothermieProjektePoint',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='TiefenGeothermieProjekte', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='tiefengeothermie_projekte_pkt')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/tiefengeothermie_projekte_pkt.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-tiefengeothermie_projekte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-tiefengeothermie_projekte'),
                    Name(id='TiefenGeothermieProjektePoint', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='TiefenGeothermieProjektePoly',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='TiefenGeothermieProjekte', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='tiefengeothermie_projekte_plg')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/tiefengeothermie_projekte_plg.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-tiefengeothermie_projekte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='permis_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='permis_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='permis_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='permis_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='permis_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='permis_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='permis_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='permis_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='date', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='date'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-tiefengeothermie_projekte'),
                    Name(id='TiefenGeothermieProjektePoly', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Gk500Gensese',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gk500_genese')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gk500-genese.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-gk500-genese')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='genese_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='genese_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='genese_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='genese_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='genese_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='genese_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='genese_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='genese_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='genese_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='genese_rm', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='genese_rm'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_tooltip_color', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_tooltip_color'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-gk500-genese'),
                    Name(id='Gk500Gensese', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Gk500Gesteinsklassierung',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gk500_gesteinsklassierung')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gk500-gesteinsklassierung.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-gk500-gesteinsklassierung')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gestkl_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gestkl_de')),
                Assign(
                    targets=[
                        Name(id='gestkl_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestkl_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestkl_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestkl_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestkl_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestkl_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestkl_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestkl_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestkl_rm', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestkl_rm'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_tooltip_color', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_tooltip_color'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-gk500-gesteinsklassierung'),
                    Name(id='Gk500Gesteinsklassierung', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Gk500LithologieHauptgruppen',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gk500_lithologie_hauptgruppen')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/lithologie_hauptgruppen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-gk500-lithologie_hauptgruppen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='bgdi_tooltip_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='bgdi_tooltip_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_tooltip_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_tooltip_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_tooltip_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_tooltip_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_tooltip_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_tooltip_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_tooltip_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_tooltip_rm', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_tooltip_rm'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_tooltip_color', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_tooltip_color'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-gk500-lithologie_hauptgruppen'),
                    Name(id='Gk500LithologieHauptgruppen', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotechnikSteinbrueche1915',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_steinbrueche_1915')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/steinbrueche_1915.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-steinbrueche_1915')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gesteinsgr')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='gesteinsgr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gesteinsgr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestein', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestein'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-steinbrueche_1915'),
                    Name(id='GeologieGeotechnikSteinbrueche1915', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotechnikSteinbrueche1965',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_steinbrueche_1965')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/steinbrueche_1965.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-steinbrueche_1965')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gesteinsgr')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='gesteinsgr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gesteinsgr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestein', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestein'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-steinbrueche_1965'),
                    Name(id='GeologieGeotechnikSteinbrueche1965', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotechnikSteinbrueche1980',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_steinbrueche_1980')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/steinbrueche_1980.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-steinbrueche_1980')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gesteinsgr')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='gesteinsgr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gesteinsgr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestein', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestein'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-steinbrueche_1980'),
                    Name(id='GeologieGeotechnikSteinbrueche1980', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotechnikSteinbrueche1995',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_steinbrueche_1995')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/steinbrueche_1995.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-steinbrueche_1995')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gesteinsgr')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='gesteinsgr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gesteinsgr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestein', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestein'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-steinbrueche_1995'),
                    Name(id='GeologieGeotechnikSteinbrueche1995', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotechnikZementindustrie1965',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_zementindustrie')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/zementindustrie_1965.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-zementindustrie_1965')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='stoff')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='stoff', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stoff'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-zementindustrie_1965'),
                    Name(id='GeologieGeotechnikZementindustrie1965', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotechnikZementindustrie1995',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_zementindustrie')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload'),
                            Constant(value='extend_existing')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False),
                            Constant(value=True)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/zementindustrie_1995.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-zementindustrie_1995')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='stoff')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='stoff', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stoff'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-zementindustrie_1995'),
                    Name(id='GeologieGeotechnikZementindustrie1995', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotechnikZiegeleien1907',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_ziegeleien_1907')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ziegeleien_1907.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-ziegeleien_1907')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='ziegelei_2')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='ziegelei_2', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ziegelei_2'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-ziegeleien_1907'),
                    Name(id='GeologieGeotechnikZiegeleien1907', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieHydroKarteGrundwasservorkommen',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='grundwasservorkommen')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/grundwasservorkommen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-hydrogeologische_karte-grundwasservorkommen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='type_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='type_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-hydrogeologische_karte-grundwasservorkommen'),
                    Name(id='GeologieHydroKarteGrundwasservorkommen', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieHydroKarteGrundwasservulneabilitaet',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='grundwasservorkommen_plg')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/grundwasservulnerabilitaet.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-hydrogeologische_karte-grundwasservulnerabilitaet')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='type_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='type_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-hydrogeologische_karte-grundwasservulnerabilitaet'),
                    Name(id='GeologieHydroKarteGrundwasservulneabilitaet', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeothermie',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geophysik_geothermie')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geothermie.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geophysik-geothermie')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='contour')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='contour', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contour'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geophysik-geothermie'),
                    Name(id='GeologieGeothermie', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Geologischer_Deklination',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geophysik_deklination')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/deklination.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geophysik-deklination')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='magne')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='magne', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='magne'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geophysik-deklination'),
                    Name(id='Geologischer_Deklination', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Geologischer_Inklination',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geophysik_inklination')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/inklination.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geophysik-inklination')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='contour')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='contour', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contour'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geophysik-inklination'),
                    Name(id='Geologischer_Inklination', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologischerAeromagnetikJura',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gravimetrie_aeromagnetik_jura')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/aeromagnetik_jura.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geophysik-aeromagnetische_karte_jura')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='et_fromatt')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='et_fromatt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='et_fromatt'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geophysik-aeromagnetische_karte_jura'),
                    Name(id='GeologischerAeromagnetikJura', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologischerAeromagnetikCh',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gravimetrie_aeromagnetik_ch')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/aeromagnetik_schweiz.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geophysik-aeromagnetische_karte_schweiz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='fid')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='et_fromatt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='et_fromatt'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geophysik-aeromagnetische_karte_schweiz'),
                    Name(id='GeologischerAeromagnetikCh', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieIsostatischeAnomalien',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='schwerekarte_isostatische_anomalien')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/isostatische_anomalien.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geodaesie-isostatische_anomalien')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='et_fromatt')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='et_fromatt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='et_fromatt'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geodaesie-isostatische_anomalien'),
                    Name(id='GeologieIsostatischeAnomalien', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieBouguerAnomalien',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geodaesie_bouguer_anomalien')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/bouguer_anomalien.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geodaesie-bouguer_anomalien')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='et_fromatt')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='et_fromatt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='et_fromatt'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geodaesie-bouguer_anomalien'),
                    Name(id='GeologieBouguerAnomalien', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeophysikTotalintensitaet',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geophysik_totalintensitaet')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/totalintensitaet.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geophysik-totalintensitaet')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='contour')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='contour', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contour'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geophysik-totalintensitaet'),
                    Name(id='GeologieGeophysikTotalintensitaet', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffe',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='cpkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='cpkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='edkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='edkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='swissgeol_link', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='swissgeol_link'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ltkinds_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ltkinds_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ltkinds_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ltkinds_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ltkinds_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ltkinds_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ltkinds_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ltkinds_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='infos_url_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='infos_url_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='infos_url_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='infos_url_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='infos_url_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='infos_url_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='infos_url_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='infos_url_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologieRohstoffeZementAbbauVerarbeitung',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologieRohstoffe', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_zementabbauverarbeitung')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_zement_abbau_verarbeitung.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-zement_abbau_verarbeitung')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='info_url_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_url_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_url_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_url_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_url_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_url_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_url_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_url_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-rohstoffe-zement_abbau_verarbeitung'),
                    Name(id='GeologieRohstoffeZementAbbauVerarbeitung', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeZiegelAbbau',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologieRohstoffe', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_ziegel_abbau')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-ziegel_abbau')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_ziegel_abbau.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologieRohstoffeZiegelAbbau', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologieRohstoffeZiegelAbbau', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeIndustrieminerale',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_industriemin')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_industrieminerale.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-industrieminerale')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='obnamealt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obnamealt'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='imkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='imkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='edrskinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='edrskinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='emkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='emkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-rohstoffe-industrieminerale'),
                    Name(id='GeologieRohstoffeIndustrieminerale', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeKohlenBitumenErdgas',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_kohlenbitumenerdgas')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_kohlen_bitumen_erdgas.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-kohlen_bitumen_erdgas')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='obnamealt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obnamealt'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='erkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='erkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ederkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ederkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='emkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='emkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-rohstoffe-kohlen_bitumen_erdgas'),
                    Name(id='GeologieRohstoffeKohlenBitumenErdgas', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeVererzungen',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_vererz')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_vererzungen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-vererzungen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='obnamealt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obnamealt'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='grkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='grkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='edmikinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='edmikinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='emkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='emkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-rohstoffe-vererzungen'),
                    Name(id='GeologieRohstoffeVererzungen', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeNaturwerksteineAbbau',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_naturwerksteineabbau')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_naturwerksteine_abbau.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-naturwerksteine_abbau')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='tckind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tckind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ltkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ltkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='emkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='emkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='clkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='clkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-rohstoffe-naturwerksteine_abbau'),
                    Name(id='GeologieRohstoffeNaturwerksteineAbbau', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeGebrocheneGesteine',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_gebrochenegesteineabbau')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_gebrochene_gesteine.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-gebrochene_gesteine_abbau')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='tckind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tckind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ltkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ltkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='emkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='emkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='clkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='clkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-rohstoffe-gebrochene_gesteine_abbau'),
                    Name(id='GeologieRohstoffeGebrocheneGesteine', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeSalzAbbauVerarbeitung',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_salzabbauverarbeitung')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_salz_abbau_verarbeitung.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-salz_abbau_verarbeitung')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='obnamealt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obnamealt'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ockind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ockind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ltkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ltkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='emkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='emkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pckind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pckind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='cpkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='cpkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='clkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='clkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-rohstoffe-salz_abbau_verarbeitung'),
                    Name(id='GeologieRohstoffeSalzAbbauVerarbeitung', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeGipsAbbauVerarbeitung',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_gipsabbauverarbeitung')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_gips_abbau_verarbeitung.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-gips_abbau_verarbeitung')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ockind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ockind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ltkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ltkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='edltkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='edltkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='emkinds', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='emkinds'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pckind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pckind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='cpkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='cpkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='clkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='clkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-rohstoffe-gips_abbau_verarbeitung'),
                    Name(id='GeologieRohstoffeGipsAbbauVerarbeitung', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieRohstoffeZiegelVerarbeitung',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='rohstoffe_ziegel_verarbeitung')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-rohstoffe-ziegel_verarbeitung')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/rohstoffe_ziegel_verarbeitung.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='obname')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='obname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pckind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pckind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='cpkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='cpkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='tlyearsformatted', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tlyearsformatted'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='clkind', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='clkind'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='purl', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='purl'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologieRohstoffeZiegelVerarbeitung', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologieRohstoffeZiegelVerarbeitung', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieTektonischeKarteLine',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='tektonische_karte_line')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/tektonische_karte_line.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-tektonische_karte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='type_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='line_id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='line_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologieTektonischeKartePoly',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='tektonische_karte_flaechen')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/tektonische_karte_poly.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-tektonische_karte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='type_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='t2_id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='t2_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-tektonische_karte'),
                    Name(id='GeologieTektonischeKarteLine', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-tektonische_karte'),
                    Name(id='GeologieTektonischeKartePoly', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieEiszeitLgm',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='eiszeit_lgm500')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/eiszeit_lgm.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-eiszeit-lgm')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='ads_name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='ads_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ads_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-eiszeit-lgm'),
                    Name(id='GeologieEiszeitLgm', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGesteinsdichte',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gesteinsdichte')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geol_gesteinsdichte.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gesteinsdichte')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='saphyr_n')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='saphyr_n', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='saphyr_n'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rhob_m', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rhob_m'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rhob_med', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rhob_med'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rhob_sd', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rhob_sd'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rhob_anz', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rhob_anz'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rhob_p05', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rhob_p05'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rhob_p25', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rhob_p25'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rhob_p75', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rhob_p75'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rhob_p95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rhob_p95'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='saphyr_pdf', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='saphyr_pdf'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gesteinsdichte'),
                    Name(id='GeologieGesteinsdichte', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Swisstlm3dEisenbahn50000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='eisenbahn_50000_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-eisenbahn.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-eisenbahnnetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=50000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objectid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsmittel', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsmittel'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='standseilbahn', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='standseilbahn'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zahnradbahn', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zahnradbahn'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ausser_betrieb', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ausser_betrieb'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swisstlm3dEisenbahn',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='eisenbahn')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-eisenbahn.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-eisenbahnnetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=50000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objectid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsmittel', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsmittel'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='standseilbahn', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='standseilbahn'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zahnradbahn', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zahnradbahn'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ausser_betrieb', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ausser_betrieb'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-eisenbahnnetz'),
                    Name(id='Swisstlm3dEisenbahn50000', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-eisenbahnnetz'),
                    Name(id='Swisstlm3dEisenbahn', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Swisstlm3dUebrigerverkehr25000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='uebrige_bahn_25000_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-uebrige_bahn.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-uebrigerverkehr')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=25000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ausser_betrieb', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ausser_betrieb'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swisstlm3dUebrigerverkehr',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='uebrige_bahn')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-uebrige_bahn.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-uebrigerverkehr')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=25000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ausser_betrieb', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ausser_betrieb'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-uebrigerverkehr'),
                    Name(id='Swisstlm3dUebrigerverkehr25000', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-uebrigerverkehr'),
                    Name(id='Swisstlm3dUebrigerverkehr', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Swisstlm3dGewaessernetz',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gewaessernetz_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-fliessgewaesser.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-gewaessernetz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gwl_nr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gwl_nr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-gewaessernetz'),
                    Name(id='Swisstlm3dGewaessernetz', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Swisstlm3dStrassen500000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='strasse_500000_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-strassen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-strassen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=500000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='strassenname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='strassenname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='belagsart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='belagsart'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eigentuemer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eigentuemer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsbedeutung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsbedeutung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eigentuemer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eigentuemer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsbeschraenkung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsbeschraenkung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swisstlm3dStrassen100000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='strasse_100000_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-strassen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-strassen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=500000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=100000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='strassenname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='strassenname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='belagsart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='belagsart'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eigentuemer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eigentuemer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsbedeutung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsbedeutung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eigentuemer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eigentuemer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsbeschraenkung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsbeschraenkung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swisstlm3dStrassen10000',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='strasse_10000_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-strassen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-strassen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=100000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=10000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='strassenname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='strassenname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='belagsart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='belagsart'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eigentuemer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eigentuemer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsbedeutung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsbedeutung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eigentuemer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eigentuemer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsbeschraenkung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsbeschraenkung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swisstlm3dStrassen',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='strasse')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstlm3d-strassen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-strassen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objektart')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=10000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='strassenname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='strassenname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='belagsart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='belagsart'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eigentuemer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eigentuemer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsbedeutung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsbedeutung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eigentuemer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eigentuemer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='verkehrsbeschraenkung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='verkehrsbeschraenkung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-strassen'),
                    Name(id='Swisstlm3dStrassen500000', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-strassen'),
                    Name(id='Swisstlm3dStrassen100000', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-strassen'),
                    Name(id='Swisstlm3dStrassen10000', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-strassen'),
                    Name(id='Swisstlm3dStrassen', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Swisstlm3dWanderwege',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='wanderwege_swissmap')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='karto'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissmap_online_wanderwege.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstlm3d-wanderwege')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='hikingtype', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='hikingtype'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bridgetype', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bridgetype'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='tunneltype', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tunneltype'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swisstlm3d-wanderwege'),
                    Name(id='Swisstlm3dWanderwege', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='VerschiebungsvektorenTsp1',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='verschiebungsvektoren_tsp1')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/verschiebungsvektoren_tps1.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.verschiebungsvektoren-tsp1')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='e_lv03', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='e_lv03'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='e_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='e_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='n_lv03', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='n_lv03'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='n_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='n_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='de'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='dn', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='dn'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fs', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fs'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.verschiebungsvektoren-tsp1'),
                    Name(id='VerschiebungsvektorenTsp1', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='VerschiebungsvektorenTsp2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='verschiebungsvektoren_tsp2')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/verschiebungsvektoren_tps2.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.verschiebungsvektoren-tsp2')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='e_lv03', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='e_lv03'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='e_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='e_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='n_lv03', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='n_lv03'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='n_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='n_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='de'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='dn', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='dn'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fs', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fs'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.verschiebungsvektoren-tsp2'),
                    Name(id='VerschiebungsvektorenTsp2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SwissmapOnlineWanderwege',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='wanderwege_swissmap')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload'),
                            Constant(value='extend_existing')],
                        values=[
                            Constant(value='karto'),
                            Constant(value=False),
                            Constant(value=True)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissmap_online_wanderwege.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-karto.wanderwege')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='hikingtype', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='hikingtype'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bridgetype', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bridgetype'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='tunneltype', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tunneltype'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-karto.wanderwege'),
                    Name(id='SwissmapOnlineWanderwege', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='PLZOrtschaften',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gabmo_plz')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gabmo_plz.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-vd.ortschaftenverzeichnis_plz')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='plz')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='os_uuid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='plz', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='plz'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zusziff', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zusziff'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='langtext', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='langtext'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_created', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_created'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.ortschaftenverzeichnis_plz'),
                    Name(id='PLZOrtschaften', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeometaPNF',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='amopnf_pnf')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/metadata_pnf.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-vd.geometa-periodische_nachfuehrung')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='description')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='canton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='canton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='year', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='year'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='the_geom'),
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.geometa-periodische_nachfuehrung'),
                    Name(id='GeometaPNF', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeometaGemeinde',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='amogr_gemeinde')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gemeinde.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-vd.geometa-gemeinde')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gemeindename')),
                Assign(
                    targets=[
                        Name(id='__returnedGeometry__', ctx=Store())],
                    value=Constant(value='the_geom_gen50')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gemeindename', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gemeindename'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kanton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kanton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='flaeche_ha', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='flaeche_ha'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bfs_nr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bfs_nr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pdf_liste', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pdf_liste'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='abgabestelle', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='abgabestelle'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_created', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_created'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom_gen50', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='the_geom_gen50'),
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='the_geom'),
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.geometa-gemeinde'),
                    Name(id='GeometaGemeinde', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeometaGrundbuch',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='amogr_grundbuch')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/grundbuch.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-vd.geometa-grundbuch')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='ortsteil_grundbuch')),
                Assign(
                    targets=[
                        Name(id='__returnedGeometry__', ctx=Store())],
                    value=Constant(value='the_geom_gen50')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ortsteil_grundbuch', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ortsteil_grundbuch'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='grundbuchfuehrung_d', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='grundbuchfuehrung_d'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='grundbuchfuehrung_f', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='grundbuchfuehrung_f'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='grundbuchfuehrung_i', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='grundbuchfuehrung_i'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='grundbuchkreis', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='grundbuchkreis'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='adresse', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adresse'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='telefon', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='telefon'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='email', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='email'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_created', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_created'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom_gen50', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='the_geom_gen50'),
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='the_geom'),
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.geometa-grundbuch'),
                    Name(id='GeometaGrundbuch', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeometaNfGeom',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='amogr_nfgeom')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/nfgeom.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-vd.geometa-nfgeom')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='__returnedGeometry__', ctx=Store())],
                    value=Constant(value='the_geom_gen50')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='firmenname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='firmenname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='adresse', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adresse'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='telefon', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='telefon'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='email', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='email'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stellvertreter', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ist_stellvertreter'),
                            Name(id='Boolean', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_created', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_created'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom_gen50', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='the_geom_gen50'),
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='the_geom'),
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.geometa-nfgeom'),
                    Name(id='GeometaNfGeom', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Oerebkataster',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/oerebkataster.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-vd.stand-oerebkataster')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gemeindename')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='fid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gemeindename', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gemeindename'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kanton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kanton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='oereb_status_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='oereb_status_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='oereb_status_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='oereb_status_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='oereb_status_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='oereb_status_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='oereb_status_rm', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='oereb_status_rm'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='oereb_status_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='oereb_status_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bfs_nr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bfs_nr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='firmenname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='firmenname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='adresszeile', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adresszeile'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='plz', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='plz'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ort', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ort'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='telefon', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='telefon'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='email', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='email'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='url_oereb', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='url_oereb'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='OerebkatasterZoom1',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Oerebkataster', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_stand_oereb_parcel')),
                Assign(
                    targets=[
                        Name(id='oereb_webservice', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='oereb_webservice'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_status', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_status'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='egris_egrid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='egris_egrid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='oereb_extract_pdf', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='oereb_extract_pdf'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='oereb_extract_url', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='oereb_extract_url'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='number', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='number_'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='realestate_type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='realestate_type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=1)),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=50000))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.stand-oerebkataster'),
                    Name(id='OerebkatasterZoom1', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='OerebkatasterZoom2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Oerebkataster', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_oereb_nfgeom')),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=50000))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.stand-oerebkataster'),
                    Name(id='OerebkatasterZoom2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='TransformationBezugsrahmenHoehePunkte',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='bezugsrahmen_hoehe_pkt')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/transformation_bezugsrahmen_hoehe.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.transformation-bezugsrahmen_hoehe')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='y', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='y'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='x', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='x'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='or_ln02_cm', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='or_ln02_cm'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='TransformationBezugsrahmenHoeheLine5cm',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='bezugsrahmen_hoehe_line_5cm')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/transformation_bezugsrahmen_hoehe.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.transformation-bezugsrahmen_hoehe')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='contour')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=500000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='contour', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contour'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='layer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='layer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='TransformationBezugsrahmenHoeheLine10cm',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='bezugsrahmen_hoehe_line_10cm')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/transformation_bezugsrahmen_hoehe.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.transformation-bezugsrahmen_hoehe')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='contour')),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=500000)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='contour', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contour'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='layer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='layer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.transformation-bezugsrahmen_hoehe'),
                    Name(id='TransformationBezugsrahmenHoehePunkte', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.transformation-bezugsrahmen_hoehe'),
                    Name(id='TransformationBezugsrahmenHoeheLine5cm', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.transformation-bezugsrahmen_hoehe'),
                    Name(id='TransformationBezugsrahmenHoeheLine10cm', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='HebungsratenLine',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='hebungsraten_line')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/hebungsraten.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.hebungsraten')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='contour')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='contour', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contour'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='HebungsratenPunkt',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='hebungsraten_pkt')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/hebungsraten.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.hebungsraten')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='ord_nr')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='ord_nr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ord_nr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ort', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ort'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='v', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='v'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='mfv', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='mfv'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='klasse', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='klasse'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.hebungsraten'),
                    Name(id='HebungsratenLine', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.hebungsraten'),
                    Name(id='HebungsratenPunkt', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SpannungsarmeGebiete',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='spannungsarme_gebiete')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/spannungsarme_gebiete.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.transformationsgenauigkeit')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='sg_name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='identifier'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='sg_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='sg_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='vali_date', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='vali_date'),
                            Name(id='DateTimeChsdi', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.transformationsgenauigkeit'),
                    Name(id='SpannungsarmeGebiete', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SpannungsarmeGebieteVD',
            bases=[
                Name(id='SpannungsarmeGebiete', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-vd.spannungsarme-gebiete'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.spannungsarme-gebiete'),
                    Name(id='SpannungsarmeGebieteVD', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotopePunkte',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotope_pkt')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geotope.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotope')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='nom')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='nom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nom'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fix_id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fix_id'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='nummer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nummer'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologieGeotopeFlaechen',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotope_plg')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geotope.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotope')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='nom')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='nom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nom'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='fix_id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='fix_id'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='nummer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nummer'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotope'),
                    Name(id='GeologieGeotopePunkte', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotope'),
                    Name(id='GeologieGeotopeFlaechen', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieGeotopeKantoneStand',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_stand_kantonale_geotope')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geotope_kantone_stand.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotope_kantone_stand')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='sigel', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='sigel'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='inventar', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='inventar'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kontakt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kontakt'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='publikation', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='publikation'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='quelle', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='quelle'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bemerkung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bemerkung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotope_kantone_stand'),
                    Name(id='GeologieGeotopeKantoneStand', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SteineHistBauwerke',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geotechnik_steine_historische_bauwerke')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geol_steine_hist_bauwerke.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geotechnik-steine_historische_bauwerke')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='objekt')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objekt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objekt'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='obtyp', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='obtyp'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ort', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ort'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektteil', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektteil'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='age', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='age'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gestart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gestart'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='referenz', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='referenz'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='hyperlink', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='hyperlink'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='abbauort', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='abbauort'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bemerkung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bemerkung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geotechnik-steine_historische_bauwerke'),
                    Name(id='SteineHistBauwerke', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisGeolBase',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gisgeol.mako')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='title')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='__timeInstant__', ctx=Store())],
                    value=Constant(value='year')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='sgd_nr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='sgd_nr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='title', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='title'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='orig_id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='original_document_id'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='author', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='author'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='report_structure', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='report_structure'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='aux_info', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='auxiliary_information'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='doccreation', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='doccreation_date'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='copy_avail', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='copy_avail'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='view_avail', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='view_avail'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pdf_url', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pdf_url'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='pdf_size', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pdf_size'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_data_status', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_data_status'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='year', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='year'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='count_pdf', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='count_pdf'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='count_without_pdf', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='count_without_pdf'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='count_total', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='count_total'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GisgeolPunkte',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_points_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-punkte'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-punkte'),
                    Name(id='GisgeolPunkte', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisgeolLinien',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_lines_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-linien'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-linien'),
                    Name(id='GisgeolLinien', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisgeolFlaechen1x1km',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_surfaces_1x1km_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-1x1km'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-1x1km'),
                    Name(id='GisgeolFlaechen1x1km', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisgeolFlaechen10x10km',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_surfaces_10x10km_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-10x10km'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-10x10km'),
                    Name(id='GisgeolFlaechen10x10km', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisgeolFlaechen10to100km2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_surfaces_10to100km2_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-10to100km2'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-10to100km2'),
                    Name(id='GisgeolFlaechen10to100km2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisgeolFlaechen100to1000km2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_surfaces_100to1000km2_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-100to1000km2'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-100to1000km2'),
                    Name(id='GisgeolFlaechen100to1000km2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisgeolFlaechen1000to21000km2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_surfaces_1000to21000km2_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-1000to21000km2'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-1000to21000km2'),
                    Name(id='GisgeolFlaechen1000to21000km2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisgeolFlaechenGt21000km2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_surfaces_gt21000km2_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-gt21000km2'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-gt21000km2'),
                    Name(id='GisgeolFlaechenGt21000km2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GisgeolFlaechenLt10km2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GisGeolBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gisgeol_surfaces_lt10km2_aggregated')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-lt10km2'))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gisgeol-flaechen-lt10km2'),
                    Name(id='GisgeolFlaechenLt10km2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Geocover',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geocover')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='description_de')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='description_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='erl_num', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='erl_num'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ber_num', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ber_num'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverExtended',
            bases=[
                Name(id='Geocover', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='spec_description_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spec_description_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='spec_description_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spec_description_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverLineAux',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeocoverExtended', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_line_aux')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_aux.mako'))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverPointHydro',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeocoverExtended', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_point_hydro')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_point_hydro.mako')),
                Assign(
                    targets=[
                        Name(id='azimut', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='azimut'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='depth', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='depth'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverPointGeol',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeocoverExtended', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_point_geol')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_point_hydro.mako')),
                Assign(
                    targets=[
                        Name(id='azimut', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='azimut'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='depth', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='depth'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverPointDrill',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeocoverExtended', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_point_drill')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_point_drill.mako')),
                Assign(
                    targets=[
                        Name(id='azimut', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='azimut'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='depth_1', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='depth_1'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_1_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_1_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_1_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_1_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='depth_2', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='depth_2'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_2_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_2_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_2_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_2_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='spec_val', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spec_val'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rem_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rem_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rem_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rem_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverPointInfo',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Geocover', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_point_info')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_point_info.mako'))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverPointStruct',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeocoverExtended', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_point_struct')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_point_struct.mako')),
                Assign(
                    targets=[
                        Name(id='azimut', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='azimut'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='dip', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='dip'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverPolygonAux1',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeocoverExtended', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_polygon_aux_1')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_aux.mako'))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverPolygonAux2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeocoverExtended', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_polygon_aux_2')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_aux.mako'))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeocoverPolygonMain',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Geocover', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_polygon_main')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_polygon.mako')),
                Assign(
                    targets=[
                        Name(id='litstrat_link_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='litstrat_link_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='litstrat_link_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='litstrat_link_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='litho_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='litho_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='litho_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='litho_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='tecto_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tecto_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='tecto_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tecto_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='chrono_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='chrono_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='chrono_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='chrono_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='orig_description_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='orig_description_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='orig_description_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='orig_description_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverLineAux', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverPointHydro', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverPointGeol', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverPointDrill', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverPointInfo', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverPointStruct', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverPolygonAux1', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverPolygonAux2', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover'),
                    Name(id='GeocoverPolygonMain', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeolGeocoverMetadata',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geocover_meta')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geocover_metadata.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geocover.metadata')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='msh_map_ti')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='msh_map_nb', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='msh_map_nb'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='msh_map_ti', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='msh_map_ti'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='msh_scale', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='msh_scale'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='msh_edit', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='msh_edit'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='msh_versio', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='msh_versio'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='msh_basis', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='msh_basis'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='msh_author', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='msh_author'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='msh_rev', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='msh_rev'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geocover.metadata'),
                    Name(id='GeolGeocoverMetadata', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologischerAtlas',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload'),
                            Constant(value='extend_existing')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False),
                            Constant(value=True)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geologischer_atlas')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='description')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='erl_num', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='erl_num'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='leg_num', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='leg_num'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasLineAux',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_line_aux')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_line_aux.mako')),
                Assign(
                    targets=[
                        Name(id='spec_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spec_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasPointHydro',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_point_hydro')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_point_hydro.mako')),
                Assign(
                    targets=[
                        Name(id='spec_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spec_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='azimut', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='azimut'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='depth', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='depth'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasPointGeol',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_point_geol')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_point_hydro.mako')),
                Assign(
                    targets=[
                        Name(id='spec_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spec_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='azimut', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='azimut'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='depth', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='depth'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasPointDrill',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_point_drill')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_point_drill.mako')),
                Assign(
                    targets=[
                        Name(id='spec_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spec_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='azimut', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='azimut'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='depth_1', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='depth_1'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_1', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_1'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='depth_2', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='depth_2'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_2', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_2'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasPointInfo',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_point_info')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_point_info.mako'))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasPointStruct',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_point_struct')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_point_struct.mako')),
                Assign(
                    targets=[
                        Name(id='spec_description', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='spec_description'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='azimut', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='azimut'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='dip', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='dip'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasPolygonAux1',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_polygon_aux_1')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_polygon.mako')),
                Assign(
                    targets=[
                        Name(id='tecto', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tecto'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasPolygonAux2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_polygon_aux_2')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_polygon.mako')),
                Assign(
                    targets=[
                        Name(id='tecto', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tecto'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GeologischerAtlasPolygonMain',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='GeologischerAtlas', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_polygon_main')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/ga25_polygon.mako')),
                Assign(
                    targets=[
                        Name(id='tecto', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tecto'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasLineAux', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasPointHydro', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasPointGeol', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasPointDrill', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasPointInfo', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasPointStruct', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasPolygonAux1', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasPolygonAux2', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-geologischer_atlas'),
                    Name(id='GeologischerAtlasPolygonMain', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologischerAtlasProfil',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologischer_atlas_profil')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologischer_atlas_profil.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-geologischer_atlas_profile')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ga25_id'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='ga25_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ga25_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ga25_no', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ga25_no'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ga25_edition', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ga25_edition'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='plate_no', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='plate_no'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='section_no', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='section_no'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='section_type_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='section_type_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='section_type_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='section_type_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='section_type_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='section_type_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='section_type_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='section_type_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='scale', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='scale'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='vert_exag', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='vert_exag'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='author', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='author'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_original', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_original'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_onlineshop_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_onlineshop_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_onlineshop_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_onlineshop_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_onlineshop_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_onlineshop_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_onlineshop_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_onlineshop_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='swissgeol_link_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='swissgeol_link_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='swissgeol_link_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='swissgeol_link_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='swissgeol_link_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='swissgeol_link_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='swissgeol_link_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='swissgeol_link_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='GeologischerAtlasProfil', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='GeologischerAtlasProfil', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Swissnames3d',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissnames3d.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swissnames3d')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='objektart', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektart'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objektklasse', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objektklasse'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='sprachcode', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='sprachcode'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='namen_typ', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='namen_typ'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster00',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_00')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=25000000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=2100000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster01',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_01')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=2100000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=1700000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster02',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_02')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=1700000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=940000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster03',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_03')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=940000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=370000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster04',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_04')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=370000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=180000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster05',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_05')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=180000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=75000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster06',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_06')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=75000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=35000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster07',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_07')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=35000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=18000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster08',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_08')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=18000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=9000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster09',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_09')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=9000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=7000))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster10',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_10')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=7000)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=3500))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster11',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_11')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=3500)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=1800))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster12',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_12')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=1800)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=900))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='Swissnames3dRaster13',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Swissnames3d', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissnames3d_raster_13')),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=900)),
                Assign(
                    targets=[
                        Name(id='__minscale__', ctx=Store())],
                    value=Constant(value=1))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster00', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster01', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster02', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster03', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster04', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster05', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster06', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster07', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster08', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster09', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster10', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster11', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster12', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissnames3d'),
                    Name(id='Swissnames3dRaster13', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Lotabweichungen',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='lotabweichungen_nur_punkte')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geodaesie'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/lotabweichungen.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.lotabweichungen')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='land', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='land'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='messjahr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='messjahr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='instrument', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='instrument'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='xi_ch', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='xi_ch'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eta_ch', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eta_ch'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='xi_etrf', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='xi_etrf'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='eta_etrf', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='eta_etrf'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='symbol', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='symbol'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.lotabweichungen'),
                    Name(id='Lotabweichungen', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='HiksDufourMetadata',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_dufour')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/dufour_meta.mako')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='datenstand'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.hiks-dufour.metadata')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kbnum'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kbbez'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.hiks-dufour.metadata'),
                    Name(id='HiksDufourMetadata', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='HiksSiegfriedTa25Metadata',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_siegfried_ta25')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/dufour_meta.mako')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='datenstand'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.hiks-siegfried-ta25.metadata')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kbnum'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kbbez'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.hiks-siegfried-ta25.metadata'),
                    Name(id='HiksSiegfriedTa25Metadata', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='HiksSiegfriedTa50Metadata',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gridstand_siegfried_ta50')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/dufour_meta.mako')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='datenstand'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.hiks-siegfried-ta50.metadata')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kbnum'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kbbez'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.hiks-siegfried-ta50.metadata'),
                    Name(id='HiksSiegfriedTa50Metadata', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Treasurehunt',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='treasurehunt')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='public'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/treasurehunt.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.treasurehunt')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='title_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='title_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='title_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='title_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='title_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='title_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='info_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='info_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_coord', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_coord'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='__maxscale__', ctx=Store())],
                    value=Constant(value=1500))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.treasurehunt'),
                    Name(id='Treasurehunt', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SwissimageHistMetadata',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swissimage_hist_chsdi')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='datenstand'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swissimagehist.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swissimage-product.metadata')),
                Assign(
                    targets=[
                        Name(id='__timeInstant__', ctx=Store())],
                    value=Constant(value='bgdi_flugjahr')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='kbnum', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='tilenumber'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='flightyear', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gdwh_flightyear'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gsd', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gsd'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='colormode', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='colormode'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_flugjahr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_flugjahr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.swissimage-product.metadata'),
                    Name(id='SwissimageHistMetadata', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='AmtlichesStrassenverzeichnis',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='streetnames_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/strassenverzeichnis.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.amtliches-strassenverzeichnis')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='stn_label')),
                Assign(
                    targets=[
                        Name(id='__queryable_attributes__', ctx=Store())],
                    value=List(
                        elts=[
                            Constant(value='stn_label'),
                            Constant(value='zip_label'),
                            Constant(value='com_name'),
                            Constant(value='com_fosnr'),
                            Constant(value='str_type')],
                        ctx=Load())),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='str_esid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='str_esid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stn_label', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stn_label'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zip_label', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zip_label'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='com_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='com_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='com_fosnr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='com_fosnr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='str_official', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='str_official'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='str_modified', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='str_modified'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='str_type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='str_type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='str_status', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='str_status'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.amtliches-strassenverzeichnis'),
                    Name(id='AmtlichesStrassenverzeichnis', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='CadastralWebMap',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_os_realestate_cwm')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/cadastralwebmap.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.kantone.cadastralwebmap-farbe')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='ak')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='ak', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ak'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='number', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='number'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='identnd', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='identnd'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='egris_egrid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='egris_egrid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='realestate_type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='realestate_type'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='geoportal_url', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='geoportal_url'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.kantone.cadastralwebmap-farbe'),
                    Name(id='CadastralWebMap', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='CadastralWebMapOpenData',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_os_realestate_vd_opendata')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/cadastralwebmap_opendata.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo-vd.amtliche-vermessung')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='bfsnr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bfsnr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ak', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ak'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='number', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='number'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='identnd', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='identnd'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='egris_egrid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='egris_egrid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='realestate_type', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='realestate_type'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='geoportal_url', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='geoportal_url'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo-vd.amtliche-vermessung'),
                    Name(id='CadastralWebMapOpenData', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Vec25GewaessernetzReferenz',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='v25_gewaessernetz_ref')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='public'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gewaessernetzref.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.vec25-gewaessernetz_referenz')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gewissnr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gewissnr'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gwlnr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='gwlnr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objectval', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectval'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objectval_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectval_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objectval_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectval_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='objectid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='objectid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.vec25-gewaessernetz_referenz'),
                    Name(id='Vec25GewaessernetzReferenz', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='AktuelleErdbeben',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='grid_pk1000')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='public'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/aktuelle_erdbeben.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.bafu.gefahren-aktuelle_erdbeben')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.bafu.gefahren-aktuelle_erdbeben'),
                    Name(id='AktuelleErdbeben', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='AmtlichesAdressVerzeichnis',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='addressverzeichnis')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/addressverzeichnis.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.amtliches-gebaeudeadressverzeichnis')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='adr_egaid')),
                Assign(
                    targets=[
                        Name(id='__queryable_attributes__', ctx=Store())],
                    value=List(
                        elts=[
                            Constant(value='adr_egaid'),
                            Constant(value='bdg_egid'),
                            Constant(value='adr_edid'),
                            Constant(value='str_esid'),
                            Constant(value='stn_label'),
                            Constant(value='adr_number')],
                        ctx=Load())),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='id'),
                            Name(id='BigInteger', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='adr_egaid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adr_egaid'),
                            Name(id='BigInteger', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bdg_egid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bdg_egid'),
                            Name(id='BigInteger', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='adr_edid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adr_edid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='str_esid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='str_esid'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='stn_label', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='stn_label'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='adr_number', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adr_number'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zip_label', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zip_label'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='com_fosnr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='com_fosnr'),
                            Name(id='SmallInteger', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='com_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='com_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='adr_status', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adr_status'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='adr_official', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adr_official'),
                            Name(id='Boolean', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bdg_category', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bdg_category'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='adr_modified', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='adr_modified'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='AmtlichesAdressVerzeichnis', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='AmtlichesAdressVerzeichnis', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='GeologieFelslabore',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='felslabore')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologie_felslabore.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-felslabore')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='__queryabl_attributes__', ctx=Store())],
                    value=List(
                        elts=[
                            Constant(value='name'),
                            Constant(value='operator')],
                        ctx=Load())),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='description_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='description_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='operator', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='operator'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='time_frame', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='time_frame'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='website_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='website_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='website_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='website_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='website_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='website_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='contact_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contact_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='contact_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contact_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='contact_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='contact_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='visitor_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='visitor_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='visitor_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='visitor_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='visitor_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='visitor_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='partners_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='partners_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='partners_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='partners_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='partners_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='partners_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='publ_opr_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='publ_opr_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='publ_opr_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='publ_opr_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='publ_opr_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='publ_opr_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='publ_tech_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='publ_tech_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='publ_tech_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='publ_tech_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='publ_tech_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='publ_tech_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='research_data', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='research_data'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-felslabore'),
                    Name(id='GeologieFelslabore', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Gletscherausdehnung',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='view_gletscherausdehnung_tooltip')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gletscherausdehnung.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gletscherausdehnung')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='name')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='sgi_id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='sgi_id'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='area_km2', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='area_km2'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gletscherausdehnung'),
                    Name(id='Gletscherausdehnung', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Gletschermaechtigkeit',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-gletschermaechtigkeit')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GletschermaechtigkeitGPRProfiles',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Gletschermaechtigkeit', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gletschermaechtigkeit_gpr_profiles')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gletschermaechtigkeit_gpr_profiles.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='gpr_prf_name')),
                Assign(
                    targets=[
                        Name(id='gpr_prf_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='prf_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='gpr_max_thik', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='max_thik'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='GletschermaechtigkeitIceThikness',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Gletschermaechtigkeit', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='gletschermaechtigkeit_ice_thinkness')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/gletschermaechtigkeit_ice_thikness.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='pk_sgi')),
                Assign(
                    targets=[
                        Name(id='pk_sgi', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pk_sgi'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='mean_thick', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='mean_thick'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='max_thick', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='max_thick'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='volume', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='volume'),
                            Name(id='Float', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='year_mode', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='year_mode'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gletschermaechtigkeit'),
                    Name(id='GletschermaechtigkeitGPRProfiles', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.geologie-gletschermaechtigkeit'),
                    Name(id='GletschermaechtigkeitIceThikness', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='FixpunkteLfp1',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='punkt_lage_lfp1')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='fida'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/fida_lfp1.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.fixpunkte-lfp1')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pointid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='punktname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='punktname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='nbident', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nbident'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='status', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='nummer', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nummer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='n95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='n95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='e95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='e95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='h02', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='h02'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='proto_url', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='proto_url'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zugang', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zugang'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ordnung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ordnung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='l_gen_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='l_gen_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='h_gen_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='h_gen_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='l_zuv_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='l_zuv_lv95'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='h_zuv_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='h_zuv_lv95'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_created', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_created'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kennzeichnung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kennzeichnung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='begehbar', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='begehbar'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.fixpunkte-lfp1'),
                    Name(id='FixpunkteLfp1', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='FixpunkteHfp1',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='punkt_hoehe_hfp1')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='fida'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/fida_hfp1.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.fixpunkte-hfp1')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='pointid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='punktname', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='punktname'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='e95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='e95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='n95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='n95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='h02', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='h02'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='proto_url', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='proto_url'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='ordnung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='ordnung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zugang', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zugang'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='h95_ell', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='h95_ell'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='l_gen_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='l_gen_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='h_gen_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='h_gen_lv95'),
                            Name(id='Numeric', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='l_zuv_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='l_zuv_lv95'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='h_zuv_lv95', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='h_zuv_lv95'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zust_haupt', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zust_haupt'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zustaendig', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zustaendig'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='bgdi_created', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_created'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kennzeichnung', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kennzeichnung'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='begehbar', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='begehbar'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Constant(value='ch.swisstopo.fixpunkte-hfp1'),
                    Name(id='FixpunkteHfp1', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='FixpunkteLfp2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='fixpunkte_lfp2')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/fixpunkte.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.fixpunkte-lfp2')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nbident_nummer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='status', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='koordinate', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='koordinate'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='hoehe_geom_m', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='hoehe_geom_m'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='url_punktprotokoll', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='url_punktprotokoll'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='punktzeichen', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='punktzeichen'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kanton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kanton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zust_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zust_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='FixpunkteLfp2', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='FixpunkteLfp2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='FixpunkteHfp2',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='fixpunkte_hfp2')),
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='vd'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/fixpunkte.mako')),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.fixpunkte-hfp2')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='nbident_nummer'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='status', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='status'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='koordinate', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='koordinate'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='hoehe_geom_m', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='hoehe_geom_m'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='url_punktprotokoll', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='url_punktprotokoll'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='punktzeichen', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='punktzeichen'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='kanton', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='kanton'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='zust_name', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='zust_name'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='FixpunkteHfp2', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='FixpunkteHfp2', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='SwisstneBase',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='tlm'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.swisstne-base')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='id')),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='uuid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='SwisstneBasePoint',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='SwisstneBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swisstne_base_point')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstne_base_point.mako'))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='SwisstneBaseLine',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='SwisstneBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swisstne_base_line')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstne_base_line.mako')),
                Assign(
                    targets=[
                        Name(id='from_node_uuid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='from_node_uuid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='to_node_uuid', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='to_node_uuid'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='rail', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='rail'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='road', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='road'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='cableway', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='cableway'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='water', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='water'),
                            Name(id='Integer', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='SwisstneBasePoly',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='SwisstneBase', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='swisstne_base_poly')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/swisstne_base_poly.mako')),
                Assign(
                    targets=[
                        Name(id='type_poly', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='type_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='type_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='SwisstneBase', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='SwisstneBasePoint', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='SwisstneBase', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='SwisstneBaseLine', ctx=Load())],
                keywords=[])),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='SwisstneBase', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='SwisstneBasePoly', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='Reflexionsseismik',
            bases=[],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__table_args__', ctx=Store())],
                    value=Dict(
                        keys=[
                            Constant(value='schema'),
                            Constant(value='autoload')],
                        values=[
                            Constant(value='geol'),
                            Constant(value=False)])),
                Assign(
                    targets=[
                        Name(id='__bodId__', ctx=Store())],
                    value=Constant(value='ch.swisstopo.geologie-reflexionsseismik')),
                Assign(
                    targets=[
                        Name(id='__extended_info__', ctx=Store())],
                    value=Constant(value=True)),
                Assign(
                    targets=[
                        Name(id='id', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='bgdi_id'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[
                            keyword(
                                arg='primary_key',
                                value=Constant(value=True))])),
                Assign(
                    targets=[
                        Name(id='alias', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='alias'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='survey', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='survey'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='access_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='access_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='access_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='access_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='access_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='access_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='access_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='access_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='reference', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='reference'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='srd', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='srd'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='domain_de', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='domain_de'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='domain_fr', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='domain_fr'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='domain_it', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='domain_it'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='domain_en', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='domain_en'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='vintage', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='vintage'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='owner', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='owner'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='region', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='region'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='link', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='link'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='download', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='download'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='swissgeol', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='swissgeol'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='the_geom', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Name(id='Geometry2D', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        ClassDef(
            name='ReflexionsseismikLine',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Reflexionsseismik', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologie_reflexionsseismik_line')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologie_reflexionsseismik_line.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='linename')),
                Assign(
                    targets=[
                        Name(id='linename', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='linename'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='dim_km', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='dim_km'),
                            Name(id='Float', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='Reflexionsseismik', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='ReflexionsseismikLine', ctx=Load())],
                keywords=[])),
        ClassDef(
            name='ReflexionsseismikPoly',
            bases=[
                Name(id='Base', ctx=Load()),
                Name(id='Reflexionsseismik', ctx=Load()),
                Name(id='Vector', ctx=Load())],
            keywords=[],
            body=[
                Assign(
                    targets=[
                        Name(id='__tablename__', ctx=Store())],
                    value=Constant(value='geologie_reflexionsseismik_poly')),
                Assign(
                    targets=[
                        Name(id='__template__', ctx=Store())],
                    value=Constant(value='templates/htmlpopup/geologie_reflexionsseismik_poly.mako')),
                Assign(
                    targets=[
                        Name(id='__label__', ctx=Store())],
                    value=Constant(value='cubename')),
                Assign(
                    targets=[
                        Name(id='cubename', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='cubename'),
                            Name(id='Unicode', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='dim_km2', ctx=Store())],
                    value=Call(
                        func=Name(id='Column', ctx=Load()),
                        args=[
                            Constant(value='dim_km2'),
                            Name(id='Float', ctx=Load())],
                        keywords=[]))],
            decorator_list=[],
            type_params=[]),
        Expr(
            value=Call(
                func=Name(id='register', ctx=Load()),
                args=[
                    Attribute(
                        value=Name(id='Reflexionsseismik', ctx=Load()),
                        attr='__bodId__',
                        ctx=Load()),
                    Name(id='ReflexionsseismikPoly', ctx=Load())],
                keywords=[]))],
    type_ignores=[])